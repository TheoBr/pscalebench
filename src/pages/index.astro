---
import Layout from "../layouts/Layout.astro";

import { connect } from "@planetscale/database";
import { queryBuilder } from "../db/kysely";
import type { inferAsyncReturnType } from "../utils/async";

const renderedAt = new Date();

const dbConnection = connect({
	host: import.meta.env.PDB_HOST,
	username: import.meta.env.PDB_USER,
	password: import.meta.env.PDB_PASS,
});

const query = queryBuilder.selectFrom("Test").selectAll();
type QueryType = inferAsyncReturnType<typeof query.execute>;

const sql = query.compile().sql;

const results = await dbConnection.execute(sql);

const rows = results.rows as QueryType;

console.log(results);
---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Loaded From PScale</h1>

		<div>
			Query time: {results.time}ms
		</div>
		<div>
			Number of rows: {results.rows.length}
		</div>

		<div>
			Contents: {results.rows.map((r) => <div>{r.value}</div>)}
		</div>

		<h2>Rendered at: {renderedAt.toUTCString()}</h2>
		<h2>
			<span
				>Full request to render time (according to Theo): <span id="overrideme"
				></span>ms
			</span>
		</h2>

		<script>
			const currentTime = new Date();
			// round trip time
			const fullTime = currentTime - window.performance.timing.requestStart;
			document.getElementById("overrideme").innerHTML = fullTime.toString();
			console.log("THEO REPORTS", fullTime);
			const times =
				JSON.parse(localStorage.getItem("astro-edge-times-store")) ?? [];
			times.push(fullTime);
			localStorage.setItem("astro-edge-times-store", JSON.stringify(times));
			console.table(times);
		</script>
	</main>
</Layout>

<style>
	:root {
		--astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
	}

	h1 {
		margin: 2rem 0;
	}

	main {
		margin: auto;
		padding: 1em;
		max-width: 60ch;
	}

	.text-gradient {
		font-weight: 900;
		background-image: var(--astro-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 100% 200%;
		background-position-y: 100%;
		border-radius: 0.4rem;
		animation: pulse 4s ease-in-out infinite;
	}

	@keyframes pulse {
		0%,
		100% {
			background-position-y: 0%;
		}
		50% {
			background-position-y: 80%;
		}
	}

	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		background: #4f39fa;
		padding: 1rem;
		border-radius: 0.4rem;
		color: var(--color-bg);
	}

	.instructions code {
		font-size: 0.875em;
		border: 0.1em solid var(--color-border);
		border-radius: 4px;
		padding: 0.15em 0.25em;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
